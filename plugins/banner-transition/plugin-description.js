<!-- Vertical Transition Plugin -->

if (window.pageBannerTransition && window.pageBannerTransition.excluded && Array.isArray(window.pageBannerTransition.excluded) && window.pageBannerTransition.excluded.length > 0)

/* 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Тут скріпт виконається якщо всі виконуються всі умови в if (бо частини if йдуть через && - логічний AND, тому треба щоб виконувались всі умови)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  window.pageBannerTransition && window.pageBannerTransition.excluded > Логічний оператор який означає, що window має імя pageBannerTransition i (&& - логічне AND) що таке імя відсутнє

  window.pageBannerTransition > (Я так розумію, що то імя для window, але не до кінця розумію як воно дається для window.)
  pageBannerTransition.excluded > .excluded - означає не включений кудись
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Array.isArray(window.pageBannerTransition.excluded) > Метод Array.isArray() визначає, чи є передане значення масивом
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  window.pageBannerTransition.excluded.length > 0 > .length > 0 визначає, чи існує дане значення
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/

for (var i = 0; i < window.pageBannerTransition.excluded.length; i++) window.location.pathname.indexOf(window.pageBannerTransition.excluded[i]) > -1 && document.body.classList.add("excluded-page");

/* 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Тут метод indexOf бере за параметр значення змінних з циклу який перебирається на основі window.pageBannerTransition.excluded.length, і додає сторінці клас .excluded-page при співпадінні
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  (var i = 0; i < window.pageBannerTransition.excluded.length; i++) > Тут цикл який перебирає всі значення змінної i, доки воно не буде більше ніж величина window.pageBannerTransition.excluded
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  window.location.pathname > метод який визначає pathname у строці URL, що йде після хосту (тобто для site.example.com/folder/37 > site.example.com - host або hostname, а folder/37 - pathname)

  window.location.pathname.indexOf(window.pageBannerTransition.excluded[i]) > тут метод IndexOf повертає індекс масиву pathname, беручи за параметр значення i отриманні з циклу
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  document.body.classList.add("excluded-page") > Тут вроді би якщо при переборі значеннь циклу, метод indexOf повертає значення, тобто true, тоді для такої сторінки додається клас .excluded-page
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/

  if (!document.body.classList.contains("excluded-page")) { 
  // if буде працювати, якщо body не буде містити елемент з класом .excluded-page

    document.body.insertAdjacentHTML("afterbegin", '<div class="transition-slide"></div>');
    // Додає в body div з класом .transition-slide 
    // (той рожевий оверлей, який появляється на самому початку загрузки сторінки, і зникає рухаючись з низу до верху)

    var tl_intro = gsap.timeline(),
    // gsap то метод, який працює для того скрипта
    // не розумію, що робить timeline, але напевно щось поступово і плавно робить з тим gsap

    transitionSlide = document.querySelector(".transition-slide"),
    // шукає елемент з класом .transition-slide, і бере його у змінну 

    site = document.getElementById("siteWrapper") || document.querySelector(".Site");
    // шукає елемент з ID siteWrapper, або з класом .Site

    (transitionSlide.style.visibility = "visible"),
    // Робить елемент .transition-slide видимим 

    tl_intro 
    .fromTo(transitionSlide, 1.2, { y: "100%" }, { y: "0%", ease: "expo.inOut" }, 0)
    // Анімація GSAP яка тут показує елемент .transition-slide (той рожевий оверлей) на позиції від top:0 до bottom:0
    // 0 в кінці тут відповідає за тривалість анімації
    // але на прикладі якщо задати перше цифрове значення (тут 1.2 після transitionSlide), то воно тоді і буде тривалістю анімації
    // { y: "100%" } - нижня вертикальна точка звідки починає рух оверлей 
    // y: "0%", - вертикальна точка, до якої буде рухатися оверлей 
    .to(
      transitionSlide,
      1,
      {
        y: "-100%", // по вертикалі положення змінється з 0 до -100% (починає зникати знизу до верху)
        ease: "expo.inOut", // ease тут задає часовий метод виконання анімації (expo - один з варіантів анімації, а inOut - тип анімації)
        onComplete: function () {
          transitionSlide.style.visibility = "hidden"; // onComplete починає виконуватись коли виконалась основна частина функції
          // В цьому випадку коли .transition-slide посунуло від 0 до -100% по осі Y, в кінці для нього добавило CSS: visibility: hidden
        },
      },
      1
    )
    // Друга анімація GSAP з елементом .transition-slide (той рожевий оверлей) яка вже поступово забирає його з екрану знизу до верху
    // У цьому випадку .transition-slide має значення top: 0, bottom: 100% і його вертикальне положення змінюється на -100%, тобто ховає до верху

    .to(
      site,
      {
        keyframes: [
          { y: "100vh", ease: "expo.inOut", duration: 0 }, // тут воно встановлює елемент #siteWrapper на всю висоту від верху до низу
          { y: "20h", ease: "expo.inOut", duration: 0, delay: 1 }, // тут зміщується #siteWrapper починаючи із вказаної висоти, і рухається у верх сторінки з затримкою 1 секунда 
          {
            y: "0",
            ease: "expo.inOut",
            duration: 1, // тривалість руху #siteWrapper починаючи із висоти вказаної у попередній функції до верху сторінки 
            clearProps: "transform", // тут розміщує #siteWrapper у сам верх вікна на всю, і видаляє стилі transform (тривалість - 1 секунда)
            onStart: function () {
              window.scrollTo(0, 0), (site.style.opacity = "1"); // onComplete починає виконуватись коли виконалась основна частина функції
              // В цьому випадку #siteWrapper стає в положення top:0; left:0, і робить елемент повністю непрозорим - opacity: 1 
            },
          },
        ],
        onComplete: function () {
          document.body.classList.add("transition-slide-end");
        },
        // коли виконуються дії в середині останньої .to() функції для body додається клас .transition-slide-end
      },        
      0
    );
    // Третя анімація GSAP для #siteWrapper, яка додає анімацію і показує елемент після того, як виконалась анімація з елементом .transition-slide
    // У цьому випадку #siteWrapper змінює положення при transform з 100vh до 0, і opacity з 0 до 1, і чуть підскролює елементи для кращої анімації
  }

<!-- Vertical Transition Plugin -->
